from abc import ABC
from abc import abstractmethod

JS_FILENAME_REGEXES = [
    r'.+\.js$',
    r'^(?!dist/).+',
    r'^(?!test(s)?/).+',
    r'^(?!spec/).+',
    r'^(?!build/).+',
    r'^(?!bin/).+',
    r'^(?!doc(s)?/).+'
]

# todo(hezheng) consider moving these regexes to their corresponding language file
C_FILENAME_REGEXES = [
    r'.+\.(h|c)$'
]

# http://gcc.gnu.org/onlinedocs/gcc-4.4.1/gcc/Overall-Options.html#index-file-name-suffix-71
CPP_FILENAME_REGEXES = {
    r'.+\.(c|cc|cxx|cpp|CPP|c\+\+|C|hh|hpp|Hpp|h\+\+|H)$'
}

GO_FILENAME_REGEXES = [
    r'.+\.go$'
]

class GraphServer(ABC):

    @abstractmethod
    def register_commit(self, hexsha, author_name, author_email,
                        commit_message):
        """
        :return: a status code, success or failure
        """

    @abstractmethod
    def update_graph(self, old_filename: str, old_src: str,
                     new_filename: str, new_src: str, patch: bytes):
        """
        Update the graph with a single-file patch
        :param old_filename: the path to a file that the commit modifies
        :param old_src: the source code of the file before the commit
        :param new_filename: the path to the file after the commit
        :param new_src: the source code of the file after the commit
        :param patch: the raw patch generated by GitPython diff
        :return a status code
        """
        pass

    @abstractmethod
    def get_graph(self):
        """
        Retrieve the graph
        :return: A CallCommitGraph object
        """
        pass

    @abstractmethod
    def reset_graph(self):
        """Reset the graph discarding all data"""
        pass

    @abstractmethod
    def filter_file(self, filename):
        """
        Check if the file should be filtered out
        :param filename: the path of the file to check
        :return: True if the file should be selected; False otherwise.
        """
        pass

    @abstractmethod
    def config(self, param: dict):
        """
        One-time configuration of the server for following calls
        :param param: key-value pairs of configuration
        """
        pass
